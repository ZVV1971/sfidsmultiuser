# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches:
      - "master"
      - "release/**"
  pull_request:
  workflow_dispatch:

env:
    GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: '0'

    - name: Setup MSBuild path
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      run: nuget restore
        
    - name: Check version
      run: nbgv get-version

    - name: Build
      run: dotnet build --configuration Release

    - name: Prepare ZIP Archive
      run: cd .\testconsole\bin\Release\; Get-ChildItem -Filter A*.exe | % {[System.Diagnostics.FileVersionInfo]::GetVersionInfo($_.FullName)}

    #- name: Test
    #  run: cd sfidsmultiuserTests/bin/Release; dotnet vstest sfidsmultiuserTests.dll
      
    #- name: Prepare ZIP Archive
    #  uses: Amadevus/pwsh-script@v2.0.3
    #  with:
    #    script: '$releasenumber = $(${env:GitBuildVersionSimple} + ".0"); Compress-Archive -Path .\testconsole\bin\Release\*.exe -DestinationPath $("Refresh.v" + $releasenumber + ".zip"); Compress-Archive -Path .\testconsole\bin\Release\*.dll -DestinationPath $("Refresh.v" + $releasenumber + ".zip") -Update; Compress-Archive -Path .\sfidsmultiuser\bin\Release\*.dll -DestinationPath $("Refresh.v" + $releasenumber + ".zip") -Update;'
    #  continue-on-error: true
    #- run: ls *.zip
    #- run: gh release create  $("Refresh.v" + ${env:GitBuildVersionSimple} + ".0") ./$("Refresh.v" + ${env:GitBuildVersionSimple} + ".0").zip
